services:
  postgres:
    image: postgres:16-alpine
    container_name: fundadvisor-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: fundadvisor
      POSTGRES_PASSWORD: fundadvisor123
      POSTGRES_DB: fundadvisor
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fundadvisor-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      APP_NAME: FundAdvisor API
      APP_VERSION: "1.0.0"
      DEBUG: "False"
      DATABASE_URL: postgresql://fundadvisor:fundadvisor123@postgres:5432/fundadvisor
      CORS_ORIGINS: '["http://localhost","http://frontend","http://127.0.0.1"]'
      SECRET_KEY: change-me-in-prod
      ACCESS_TOKEN_EXPIRE_MINUTES: "30"
      LOG_FILE: /var/log/backend/app.log
      API_V1_STR: /api/v1
    volumes:
      - ./logs/backend:/var/log/backend
    ports:
      - "8000:8000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fundadvisor-frontend
    restart: unless-stopped
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:80"

volumes:
  postgres_data:
