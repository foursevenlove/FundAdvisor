version: "3.9"

services:
  postgres:
    image: postgres:15-alpine
    container_name: fundadvisor-postgres
    environment:
      POSTGRES_USER: foursevenlove
      POSTGRES_PASSWORD: foursevenlove
      POSTGRES_DB: fundadvisor
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
      - ./logs/postgres:/var/log/postgresql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d fundadvisor"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: >
      postgres -c logging_collector=on \
               -c log_directory=/var/log/postgresql \
               -c log_filename=postgresql.log \
               -c log_statement=none \
               -c log_min_messages=warning
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: fundadvisor-backend:latest
    env_file:
      - ./backend/.env
    environment:
      DATABASE_URL: postgresql://fundadvisor:fundadvisor123@postgres:5432/fundadvisor
      LOG_FILE: /var/log/backend/app.log
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./logs/backend:/var/log/backend
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        VITE_API_BASE_URL: ${VITE_API_BASE_URL:-http://localhost:8000/api/v1}
    image: fundadvisor-frontend:latest
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_started
    volumes:
      - ./logs/frontend:/var/log/nginx
    restart: unless-stopped

volumes:
  postgres_data:
